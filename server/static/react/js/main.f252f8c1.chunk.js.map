{"version":3,"sources":["components/Welcome/Welcome.js","components/SignInForm/SignInForm.js","components/NewUserForm/NewUserForm.js","components/About/About.js","pages/landing.js","components/NavbarSearch/NavbarSearch.js","components/Navbar/Navbar.js","pages/home.js","pages/profile.js","App.js","serviceWorker.js","index.js"],"names":["Welcome","id","alt","src","SignInForm","useState","signIn","signInState","setSignInState","to","required","placeholder","onClick","e","preventDefault","NewUserForm","className","class","selected","value","About","Landing","newUser","newUserState","setNewUserState","NavbarSearch","type","aria-label","Navbar","data-toggle","data-target","aria-controls","aria-expanded","Home","Profile","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"js/main.f252f8c1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Welcome.css\";\n\nfunction Welcome() {\n    return(\n        <div id=\"welcome\">\n            <img alt=\"Media Mesh\" src=\"../static/react/MainLogo.png\"/>\n            <h1>Welcome Back</h1>\n            <p>Sign in to get inspired!</p>\n        </div>\n    )\n}\n\nexport default Welcome;","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./SignInForm.css\";\n\nfunction SignInForm() {\n    const [signInState, setSignInState] = useState({\n        signIn: false\n    });\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        setSignInState({\n            signIn: true\n        });\n    };\n\n    if (signInState.signIn === true) {\n        return <Redirect to=\"/home\" />;\n    } else {\n        return(\n            <div>\n                <form>\n                    <input required placeholder=\"E-Mail\"/>\n                    <input required placeholder=\"Password\"/>\n                    <button onClick={handleSubmit}>Sign In</button>\n                </form>\n            </div>\n        )\n    }\n\n}\n\nexport default SignInForm;","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport \"./NewUserForm.css\";\n\nfunction NewUserForm() {\n    const [signInState, setSignInState] = useState({\n        signIn: false\n    });\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        setSignInState({\n            signIn: true\n        });\n    };\n\n    if (signInState.signIn === true) {\n        return <Redirect to=\"/home\" />;\n    } else {\n        return(\n            <div>\n                <form id=\"newForm\">\n                    <div className=\"row\">\n                        <input required placeholder=\"Full Name\"/>\n                        <input required placeholder=\"E-Mail\"/>\n                    </div>\n                    <div className=\"row\">\n                        <input required placeholder=\"Password\"/>\n                        <input required placeholder=\"Confirm Password\"/>\n                    </div>\n                    <div className=\"row\">\n                        <select class=\"custom-select\">\n                            <option selected>Choose an Artform</option>\n                            <option value=\"Animation\">Animation</option>\n                            <option value=\"Architecture\">Architecture</option>\n                            <option value=\"Cinema\">Cinema</option>\n                            <option value=\"Dance\">Dance</option>\n                            <option value=\"Digital Art\">Digital Art</option>\n                            <option value=\"Drawing\">Drawing</option>\n                            <option value=\"Engraving\">Engraving</option>\n                            <option value=\"Music\">Music</option>\n                            <option value=\"Painting\">Painting</option>\n                            <option value=\"Photography\">Photography</option>\n                            <option value=\"Poetry\">Poetry</option>\n                            <option value=\"Sculpture\">Sculpture</option>\n                            <option value=\"Singing\">Singing</option>\n                            <option value=\"Theatre\">Theatre</option>\n                            <option value=\"Web Design\">Web Design</option>\n                            <option value=\"Woodwork\">Woodwork</option>\n                            <option value=\"Writing\">Writing</option>\n                        </select>\n                    </div>\n                    <button onClick={handleSubmit}>Create Account</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default NewUserForm;","import React from \"react\";\nimport \"./About.css\";\n\nfunction About() {\n    return(\n        <div className=\"container\" id=\"about\">\n            <p>Media Mesh is a safe place for creative minds to share their work and inspirations with others! Members can also share constructive criticism with other members.</p>\n            <h3>Get Inspired Today!</h3>\n        </div>\n    )\n}\n\nexport default About;","import React, { useState } from \"react\";\nimport Welcome from \"../components/Welcome/Welcome\";\nimport SignInForm from \"../components/SignInForm/SignInForm\";\nimport NewUserForm from \"../components/NewUserForm/NewUserForm\";\nimport About from \"../components/About/About\";\nimport \"./css/landing.css\";\n\nfunction Landing() {\n    const [newUserState, setNewUserState] = useState({\n        newUser: false\n    });\n\n    const newUser = e => {\n        e.preventDefault();\n        setNewUserState({\n            newUser: true\n        });\n    };\n\n    const returningUser = e => {\n        e.preventDefault();\n        setNewUserState({\n            newUser: false\n        })\n    }\n\n    return(\n        <div id=\"landing\">\n            <Welcome />\n            {\n            newUserState.newUser === false ?\n            <div id=\"signIn\">\n                <div className=\"container\">\n                    <p>New user?</p><button onClick={newUser}>Create An Account</button>\n                    <SignInForm />\n                </div>\n            </div>\n            :\n            <div id=\"newUser\">\n                <div className=\"container\">\n                    <p>Returning user?</p><button onClick={returningUser}>Sign In</button>\n                    <NewUserForm />\n                </div>\n            </div>\n            }\n            <About />\n        </div>\n    )\n}\n\nexport default Landing;","import React from \"react\";\nimport \"./NavbarSearch.css\";\n\nfunction NavbarSearch() {\n    return (\n        <form class=\"form-inline my-2 my-lg-0\">\n            <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n            <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n        </form>\n    )\n}\n\nexport default NavbarSearch;","import React from \"react\";\nimport NavbarSearch from \"../NavbarSearch/NavbarSearch\";\nimport \"./Navbar.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Navbar() {\n\n    return (\n        <div>\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <Link to=\"/home\">Media Mesh</Link>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n\n                <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <NavbarSearch />\n                    <ul class=\"navbar-nav mr-auto\">\n                        <li class=\"nav-item\">\n                            <Link to=\"/profile\">Profile</Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </div>\n            )\n        }\nexport default Navbar;","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\n\nfunction Home() {\n    return(\n        <div>\n            <Navbar />\n            <h1>Home</h1>\n        </div>\n    )\n}\n\nexport default Home;","import React from \"react\";\nimport Navbar from \"../components/Navbar/Navbar\";\n\nfunction Profile() {\n    return(\n        <div>\n            <Navbar />\n            <h1>Profile</h1>\n        </div>\n    )\n}\n\nexport default Profile;","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Landing from \"./pages/landing\";\nimport Home from \"./pages/home\";\nimport Profile from \"./pages/profile\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Route exact path=\"/\" component={Landing} />\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/profile\" component={Profile} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}